package com.willianbrendo.biblioteca_avancada;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class BibliotecaAvancadaApplication {

	public static void main(String[] args) {
		SpringApplication.run(BibliotecaAvancadaApplication.class, args);
		
		final String BASE = "/api/v1";

        // --- ExibiÃ§Ã£o dos Endpoints no Console ---
        System.out.println("==========================================================");
        System.out.println("ðŸš€ API de Biblioteca Robusta iniciada com sucesso!");
        System.out.println("ðŸ“š Acesse a porta padrÃ£o: http://localhost:8080");
        System.out.println("==========================================================");
        System.out.println();
        System.out.println("ðŸ“‹ Endpoints disponÃ­veis:");
        System.out.println();
        
        System.out.println("ðŸ“– LIVROS (" + BASE + "/books):");
        System.out.println("GET    " + BASE + "/books - Lista todos os livros");
        System.out.println("POST   " + BASE + "/books - Cadastra novo livro (Body: Book)");
        System.out.println("GET    " + BASE + "/books/{id} - Busca livro por ID");
        System.out.println("PUT    " + BASE + "/books/{id} - Atualiza livro");
        System.out.println("DELETE " + BASE + "/books/{id} - Remove livro (Regra: se nÃ£o estiver emprestado)");
        System.out.println("GET    " + BASE + "/books/disponiveis - Livros disponÃ­veis");
        System.out.println("GET    " + BASE + "/books/emprestados - Livros emprestados");
        System.out.println("GET    " + BASE + "/books/search/titulo/{titulo} - Busca por tÃ­tulo (parcial)");
        System.out.println("GET    " + BASE + "/books/search/autor/{autor} - Busca por autor (parcial)");
        System.out.println("GET    " + BASE + "/books/search/categoria/{categoria} - Busca por categoria");
        System.out.println("GET    " + BASE + "/books/search/isbn/{isbn} - Busca por ISBN");
        System.out.println();
        
        System.out.println("ðŸ“‹ EMPRÃ‰STIMOS (" + BASE + "/loans):");
        System.out.println("GET    " + BASE + "/loans - Lista todos os emprÃ©stimos (HistÃ³rico)");
        System.out.println("POST   " + BASE + "/loans - Realiza novo emprÃ©stimo (Body: Loan)");
        System.out.println("PUT    " + BASE + "/loans/{bookId}/devolucao - Realiza devoluÃ§Ã£o");
        System.out.println("PUT    " + BASE + "/loans/{loanId}/renovar - Renova emprÃ©stimo");
        System.out.println("GET    " + BASE + "/loans/ativos - EmprÃ©stimos ativos");
        System.out.println("GET    " + BASE + "/loans/finalizados - EmprÃ©stimos finalizados (devolvidos)");
        System.out.println("GET    " + BASE + "/loans/atrasados - EmprÃ©stimos atrasados");
        System.out.println("GET    " + BASE + "/loans/usuario/{email}/ativos - EmprÃ©stimos ativos do usuÃ¡rio");
        System.out.println();
        
        System.out.println("ðŸ“Š DASHBOARD (" + BASE + "/dashboard):");
        System.out.println("GET    " + BASE + "/dashboard - EstatÃ­sticas e Resumo completo");
        System.out.println("GET    " + BASE + "/dashboard/resumo - Resumo para widgets");
        System.out.println("==========================================================");
	}

}
